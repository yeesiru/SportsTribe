rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Open access to 'rewards' collection
    match /rewards/{rewardId} {
      allow read, write: if true;
    }
    
    match /users/{userId} {
      allow read, write: if true;
    }
    
    match /joinRequests/{requestId} {
      allow read, write: if request.auth != null;
    }
    
    // Clubs collection
    match /club/{clubId} {
      allow read, write: if request.auth != null;

      // Messages subcollection - allow club members to read and write
      match /messages/{messageId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null 
          && request.auth.uid in get(/databases/$(database)/documents/club/$(clubId)).data.members;
        allow update, delete: if request.auth != null && 
          request.auth.uid == resource.data.senderId;
      }

      // Events subcollection
      match /events/{eventId} {
        // Anyone can read events, only club members can create
        allow read: if true;
        allow create: if request.auth != null 
          && request.auth.uid in get(/databases/$(database)/documents/club/$(clubId)).data.members
          && request.auth.uid == request.resource.data.createdBy;
        // Only the event creator OR club owner can update/delete
        allow update, delete: if request.auth != null && (
          request.auth.uid == resource.data.createdBy ||
          request.auth.uid == get(/databases/$(database)/documents/club/$(clubId)).data.creatorId
        );
      }

      // Posts subcollection
      match /posts/{postId} {
        // Anyone can read posts, only club members can create
        allow read: if true;
        allow create: if request.auth != null 
          && request.auth.uid in get(/databases/$(database)/documents/club/$(clubId)).data.members
          && request.auth.uid == request.resource.data.createdBy;
        // Only the post creator OR club owner can update/delete
        allow update, delete: if request.auth != null && (
          request.auth.uid == resource.data.createdBy ||
          request.auth.uid == get(/databases/$(database)/documents/club/$(clubId)).data.creatorId
        );

        // Comments subcollection (nested under posts)
        match /comments/{commentId} {
          // Anyone can read comments
          allow read: if true;
          // Only club members can create comments, and they must be the author
          allow create: if request.auth != null 
            && request.auth.uid in get(/databases/$(database)/documents/club/$(clubId)).data.members
            && request.auth.uid == request.resource.data.createdBy;
          // Only the comment creator OR club owner can update/delete
          allow update, delete: if request.auth != null && (
            request.auth.uid == resource.data.createdBy ||
            request.auth.uid == get(/databases/$(database)/documents/club/$(clubId)).data.creatorId
          );
        }
      }

      // Requests subcollection (for join requests, if you use it)
      match /requests/{requestId} {
        // Only authenticated users can create a request for themselves
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
        // Only the club owner can read, update, or delete requests
        allow read, update, delete: if request.auth != null && request.auth.uid == get(/databases/$(database)/documents/club/$(clubId)).data.creatorId;
      }
    }
  }
}
